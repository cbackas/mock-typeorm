import { QueryRunner } from "typeorm";

export type QueryRunnerMethods = keyof {
  [K in keyof QueryRunner as QueryRunner[K] extends (...args: any[]) => any
    ? K
    : never]: K;
};

export const queryRunnerMethods: QueryRunnerMethods[] = [
  "connect",
  "beforeMigration",
  "afterMigration",
  "release",
  "clearDatabase",
  "startTransaction",
  "commitTransaction",
  "rollbackTransaction",
  "query",
  "stream",
  "getDatabases",
  "getSchemas",
  "getTable",
  "getTables",
  "getView",
  "getViews",
  "getReplicationMode",
  "hasDatabase",
  "getCurrentDatabase",
  "hasSchema",
  "getCurrentSchema",
  "hasTable",
  "hasColumn",
  "createDatabase",
  "dropDatabase",
  "createSchema",
  "dropSchema",
  "createTable",
  "dropTable",
  "createView",
  "dropView",
  "renameTable",
  "changeTableComment",
  "addColumn",
  "addColumns",
  "renameColumn",
  "changeColumn",
  "changeColumns",
  "dropColumn",
  "dropColumns",
  "createPrimaryKey",
  "updatePrimaryKeys",
  "dropPrimaryKey",
  "createUniqueConstraint",
  "createUniqueConstraints",
  "dropUniqueConstraint",
  "dropUniqueConstraints",
  "createCheckConstraint",
  "createCheckConstraints",
  "dropCheckConstraint",
  "dropCheckConstraints",
  "createExclusionConstraint",
  "createExclusionConstraints",
  "dropExclusionConstraint",
  "dropExclusionConstraints",
  "createForeignKey",
  "createForeignKeys",
  "dropForeignKey",
  "dropForeignKeys",
  "createIndex",
  "createIndices",
  "dropIndex",
  "dropIndices",
  "clearTable",
  "enableSqlMemory",
  "disableSqlMemory",
  "clearSqlMemory",
  "getMemorySql",
  "executeMemoryUpSql",
  "executeMemoryDownSql",
];
